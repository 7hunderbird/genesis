#!/bin/bash
set -eu

action=$1
env=$2
prefix=$3

# the tests will want to know how we were called...
safe set $prefix/args action="$action" \
                      env="$env" \
                      prefix="$prefix" \
                      extra="${4:-(none)}"

# ... and what our environment was
safe set $prefix/env GENESIS_KIT_NAME="$GENESIS_KIT_NAME" \
                     GENESIS_KIT_VERSION="$GENESIS_KIT_VERSION" \
                     GENESIS_ROOT="$GENESIS_ROOT" \
                     GENESIS_ENVIRONMENT="$GENESIS_ENVIRONMENT" \
                     GENESIS_VAULT_PREFIX="$GENESIS_VAULT_PREFIX"


if [[ ${HOOK_SHOULD_FAIL:-no} = "yes" ]]; then
  echo >&2 "Fake Error: the hook was destined to fail"
  echo     "Fake Output: this was printeded to standard out"
  exit 1;
fi

case $action in
check)
  rc=0
  if ! safe --quiet check $prefix/admin:password; then
    echo "[admin:password] is missing"
    rc=1
  fi
  [[ $rc == 0 ]] || exit $rc
  echo "all secrets and certs present!"
  ;;

add)
  if ! safe --quiet check $prefix/admin:password; then
    echo "[admin:password] generating new administrator password"
    safe --quiet gen $prefix/admin password
  fi
  ;;

rotate)
  echo "[admin:password] rotating administrator password"
  safe --quiet gen $prefix/admin password
  # FIXME: how are we going to do --force?
  ;;

default)
  echo >&2 "unrecognized 'hooks/secret' action: '$action'"
  exit 2
esac

exit 0
