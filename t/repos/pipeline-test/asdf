groups:
- jobs:
  - client-aws-1-preprod-pipeline-test
  - client-aws-1-prod-pipeline-test
  - client-aws-1-sandbox-pipeline-test
  - notify-client-aws-1-prod-pipeline-test-changes
  name: '*'
jobs:
- name: client-aws-1-preprod-pipeline-test
  plan:
  - do:
    - aggregate:
      - get: git
      - get: bosh-lite-stemcell
        params:
          tarball: true
        trigger: true
      - get: client-aws-1-preprod-changes
        trigger: true
      - get: client-aws-1-preprod-cache
        passed:
        - client-aws-1-sandbox-pipeline-test
        trigger: true
    - config:
        image_resource:
          source:
            repository: starkandwayne/concourse
          type: docker-image
        inputs:
        - name: client-aws-1-preprod-cache
        - name: bosh-lite-stemcell
          path: stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent
        outputs:
        - name: out
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: pp-admin
          BOSH_CLIENT_SECRET: Ahti2eeth3aewohnee1Phaec
          BOSH_ENVIRONMENT: https://preprod.example.com:25555
          BOSH_NON_INTERACTIVE: true
          DEBUG: 1
          STEMCELLS: ../stemcells
        platform: linux
        run:
          args:
          - ci-stemcells
          dir: client-aws-1-preprod-cache
          path: .genesis/bin/genesis
      task: upload-stemcells
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: git
        - name: client-aws-1-preprod-cache
        outputs:
        - name: out
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: pp-admin
          BOSH_CLIENT_SECRET: Ahti2eeth3aewohnee1Phaec
          BOSH_ENVIRONMENT: https://preprod.example.com:25555
          BOSH_NON_INTERACTIVE: true
          CACHE_DIR: client-aws-1-preprod-cache
          CURRENT_ENV: client-aws-1-preprod
          DEBUG: 1
          GIT_BRANCH: master
          GIT_PRIVATE_KEY: |
            -----BEGIN RSA PRIVATE KEY-----
            lol. you didn't really think that
            we'd put the key here, in a test,
            did you?!
            -----END RSA PRIVATE KEY-----
          OUT_DIR: out/git
          PREVIOUS_ENV: client-aws-1-sandbox
          VAULT_ADDR: http://myvault.myorg.com:5999
          VAULT_ROLE_ID: role-uuid-here
          VAULT_SECRET_ID: secret-uuid-here
          VAULT_SKIP_VERIFY: 1
          WORKING_DIR: git
        platform: linux
        run:
          args:
          - ci-pipeline-deploy
          path: client-aws-1-preprod-cache/.genesis/bin/genesis
      ensure:
        params:
          rebase: true
          repository: out/git
        put: git
      tags:
      - client-aws-1-preprod
      task: bosh-deploy
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: out
        - name: client-aws-1-preprod-cache
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: pp-admin
          BOSH_CLIENT_SECRET: Ahti2eeth3aewohnee1Phaec
          BOSH_ENVIRONMENT: https://preprod.example.com:25555
          CURRENT_ENV: client-aws-1-preprod
          DEBUG: 1
          ERRAND_NAME: run-something-good
        platform: linux
        run:
          args:
          - ci-pipeline-run-smoke-test
          dir: out/git
          path: ../../client-aws-1-preprod-cache/.genesis/bin/genesis
      tags:
      - client-aws-1-preprod
      task: smoke-test
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: out
        - name: client-aws-1-preprod-cache
        outputs:
        - name: cache-out
        params:
          CURRENT_ENV: client-aws-1-preprod
          DEBUG: 1
          GIT_BRANCH: master
          GIT_PRIVATE_KEY: |
            -----BEGIN RSA PRIVATE KEY-----
            lol. you didn't really think that
            we'd put the key here, in a test,
            did you?!
            -----END RSA PRIVATE KEY-----
          OUT_DIR: cache-out/git
          WORKING_DIR: out/git
        platform: linux
        run:
          args:
          - ci-generate-cache
          path: client-aws-1-preprod-cache/.genesis/bin/genesis
      tags:
      - client-aws-1-preprod
      task: generate-cache
    - params:
        rebase: true
        repository: cache-out/git
      put: git
    - params:
        rebase: true
        repository: cache-out/git
      put: client-aws-1-prod-cache
    on_failure:
      aggregate:
      - params:
          channel: '#botspam'
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          text: 'aws-1: Concourse deployment to client-aws-1-preprod-pipeline-test
            failed'
          username: runwaybot
        put: slack
      - params:
          color: gray
          from: runwaybot
          message: 'aws-1: Concourse deployment to client-aws-1-preprod-pipeline-test
            failed'
          notify: false
        put: hipchat
    on_success:
      aggregate:
      - params:
          channel: '#botspam'
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          text: 'aws-1: Concourse successfully deployed client-aws-1-preprod-pipeline-test'
          username: runwaybot
        put: slack
      - params:
          color: gray
          from: runwaybot
          message: 'aws-1: Concourse successfully deployed client-aws-1-preprod-pipeline-test'
          notify: false
        put: hipchat
  public: true
  serial: true
- name: notify-client-aws-1-prod-pipeline-test-changes
  plan:
  - aggregate:
    - get: client-aws-1-prod-changes
      trigger: true
    - get: client-aws-1-prod-cache
      passed:
      - client-aws-1-preprod-pipeline-test
      trigger: true
    - get: bosh-lite-stemcell
      params:
        tarball: true
      trigger: true
  - aggregate:
    - params:
        channel: '#botspam'
        icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        text: 'aws-1: Changes are staged to be deployed to client-aws-1-prod-pipeline-test,
          please schedule + run a deploy via Concourse'
        username: runwaybot
      put: slack
    - params:
        color: gray
        from: runwaybot
        message: 'aws-1: Changes are staged to be deployed to client-aws-1-prod-pipeline-test,
          please schedule + run a deploy via Concourse'
        notify: false
      put: hipchat
  public: true
  serial: true
- name: client-aws-1-prod-pipeline-test
  plan:
  - do:
    - aggregate:
      - get: git
      - get: bosh-lite-stemcell
        params:
          tarball: true
        trigger: false
      - get: client-aws-1-prod-changes
        passed:
        - notify-client-aws-1-prod-pipeline-test-changes
        trigger: false
      - get: client-aws-1-prod-cache
        passed:
        - notify-client-aws-1-prod-pipeline-test-changes
        trigger: false
    - config:
        image_resource:
          source:
            repository: starkandwayne/concourse
          type: docker-image
        inputs:
        - name: client-aws-1-prod-cache
        - name: bosh-lite-stemcell
          path: stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent
        outputs:
        - name: out
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: pr-admin
          BOSH_CLIENT_SECRET: eeheelod3veepaepiepee8ahc3rukaefo6equiezuapohS2u
          BOSH_ENVIRONMENT: https://prod.example.com:25555
          BOSH_NON_INTERACTIVE: true
          DEBUG: 1
          STEMCELLS: ../stemcells
        platform: linux
        run:
          args:
          - ci-stemcells
          dir: client-aws-1-prod-cache
          path: .genesis/bin/genesis
      task: upload-stemcells
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: git
        - name: client-aws-1-prod-cache
        outputs:
        - name: out
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: pr-admin
          BOSH_CLIENT_SECRET: eeheelod3veepaepiepee8ahc3rukaefo6equiezuapohS2u
          BOSH_ENVIRONMENT: https://prod.example.com:25555
          BOSH_NON_INTERACTIVE: true
          CACHE_DIR: client-aws-1-prod-cache
          CURRENT_ENV: client-aws-1-prod
          DEBUG: 1
          GIT_BRANCH: master
          GIT_PRIVATE_KEY: |
            -----BEGIN RSA PRIVATE KEY-----
            lol. you didn't really think that
            we'd put the key here, in a test,
            did you?!
            -----END RSA PRIVATE KEY-----
          OUT_DIR: out/git
          PREVIOUS_ENV: client-aws-1-preprod
          VAULT_ADDR: http://myvault.myorg.com:5999
          VAULT_ROLE_ID: role-uuid-here
          VAULT_SECRET_ID: secret-uuid-here
          VAULT_SKIP_VERIFY: 1
          WORKING_DIR: git
        platform: linux
        run:
          args:
          - ci-pipeline-deploy
          path: client-aws-1-prod-cache/.genesis/bin/genesis
      ensure:
        params:
          rebase: true
          repository: out/git
        put: git
      tags:
      - client-aws-1-prod
      task: bosh-deploy
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: out
        - name: client-aws-1-prod-cache
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: pr-admin
          BOSH_CLIENT_SECRET: eeheelod3veepaepiepee8ahc3rukaefo6equiezuapohS2u
          BOSH_ENVIRONMENT: https://prod.example.com:25555
          CURRENT_ENV: client-aws-1-prod
          DEBUG: 1
          ERRAND_NAME: run-something-good
        platform: linux
        run:
          args:
          - ci-pipeline-run-smoke-test
          dir: out/git
          path: ../../client-aws-1-prod-cache/.genesis/bin/genesis
      tags:
      - client-aws-1-prod
      task: smoke-test
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: out
        - name: client-aws-1-prod-cache
        outputs:
        - name: cache-out
        params:
          CURRENT_ENV: client-aws-1-prod
          DEBUG: 1
          GIT_BRANCH: master
          GIT_PRIVATE_KEY: |
            -----BEGIN RSA PRIVATE KEY-----
            lol. you didn't really think that
            we'd put the key here, in a test,
            did you?!
            -----END RSA PRIVATE KEY-----
          OUT_DIR: cache-out/git
          WORKING_DIR: out/git
        platform: linux
        run:
          args:
          - ci-generate-cache
          path: client-aws-1-prod-cache/.genesis/bin/genesis
      tags:
      - client-aws-1-prod
      task: generate-cache
    - params:
        rebase: true
        repository: cache-out/git
      put: git
    on_failure:
      aggregate:
      - params:
          channel: '#botspam'
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          text: 'aws-1: Concourse deployment to client-aws-1-prod-pipeline-test failed'
          username: runwaybot
        put: slack
      - params:
          color: gray
          from: runwaybot
          message: 'aws-1: Concourse deployment to client-aws-1-prod-pipeline-test
            failed'
          notify: false
        put: hipchat
    on_success:
      aggregate:
      - params:
          channel: '#botspam'
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          text: 'aws-1: Concourse successfully deployed client-aws-1-prod-pipeline-test'
          username: runwaybot
        put: slack
      - params:
          color: gray
          from: runwaybot
          message: 'aws-1: Concourse successfully deployed client-aws-1-prod-pipeline-test'
          notify: false
        put: hipchat
  public: true
  serial: true
- name: client-aws-1-sandbox-pipeline-test
  plan:
  - do:
    - aggregate:
      - get: git
      - get: bosh-lite-stemcell
        params:
          tarball: true
        trigger: true
      - get: client-aws-1-sandbox-changes
        trigger: true
    - config:
        image_resource:
          source:
            repository: starkandwayne/concourse
          type: docker-image
        inputs:
        - name: git
        - name: bosh-lite-stemcell
          path: stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent
        outputs:
        - name: out
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: sb-admin
          BOSH_CLIENT_SECRET: PaeM2Eip
          BOSH_ENVIRONMENT: https://sandbox.example.com:25555
          BOSH_NON_INTERACTIVE: true
          DEBUG: 1
          STEMCELLS: ../stemcells
        platform: linux
        run:
          args:
          - ci-stemcells
          dir: git
          path: .genesis/bin/genesis
      task: upload-stemcells
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: git
        outputs:
        - name: out
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: sb-admin
          BOSH_CLIENT_SECRET: PaeM2Eip
          BOSH_ENVIRONMENT: https://sandbox.example.com:25555
          BOSH_NON_INTERACTIVE: true
          CACHE_DIR: client-aws-1-sandbox-cache
          CURRENT_ENV: client-aws-1-sandbox
          DEBUG: 1
          GIT_BRANCH: master
          GIT_PRIVATE_KEY: |
            -----BEGIN RSA PRIVATE KEY-----
            lol. you didn't really think that
            we'd put the key here, in a test,
            did you?!
            -----END RSA PRIVATE KEY-----
          OUT_DIR: out/git
          PREVIOUS_ENV: null
          VAULT_ADDR: http://myvault.myorg.com:5999
          VAULT_ROLE_ID: role-uuid-here
          VAULT_SECRET_ID: secret-uuid-here
          VAULT_SKIP_VERIFY: 1
          WORKING_DIR: git
        platform: linux
        run:
          args:
          - ci-pipeline-deploy
          path: git/.genesis/bin/genesis
      ensure:
        params:
          rebase: true
          repository: out/git
        put: git
      tags:
      - client-aws-1-sandbox
      task: bosh-deploy
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: out
        - name: git
        params:
          BOSH_CA_CERT: |
            ----- BEGIN CERTIFICATE -----
            cert-goes-here
            ----- END CERTIFICATE -----
          BOSH_CLIENT: sb-admin
          BOSH_CLIENT_SECRET: PaeM2Eip
          BOSH_ENVIRONMENT: https://sandbox.example.com:25555
          CURRENT_ENV: client-aws-1-sandbox
          DEBUG: 1
          ERRAND_NAME: run-something-good
        platform: linux
        run:
          args:
          - ci-pipeline-run-smoke-test
          dir: out/git
          path: ../../git/.genesis/bin/genesis
      tags:
      - client-aws-1-sandbox
      task: smoke-test
    - config:
        image_resource:
          source:
            repository: custom/concourse-image
            tag: rc1
          type: docker-image
        inputs:
        - name: out
        - name: git
        outputs:
        - name: cache-out
        params:
          CURRENT_ENV: client-aws-1-sandbox
          DEBUG: 1
          GIT_BRANCH: master
          GIT_PRIVATE_KEY: |
            -----BEGIN RSA PRIVATE KEY-----
            lol. you didn't really think that
            we'd put the key here, in a test,
            did you?!
            -----END RSA PRIVATE KEY-----
          OUT_DIR: cache-out/git
          WORKING_DIR: out/git
        platform: linux
        run:
          args:
          - ci-generate-cache
          path: git/.genesis/bin/genesis
      tags:
      - client-aws-1-sandbox
      task: generate-cache
    - params:
        rebase: true
        repository: cache-out/git
      put: git
    - params:
        rebase: true
        repository: cache-out/git
      put: client-aws-1-preprod-cache
    on_failure:
      aggregate:
      - params:
          channel: '#botspam'
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          text: 'aws-1: Concourse deployment to client-aws-1-sandbox-pipeline-test
            failed'
          username: runwaybot
        put: slack
      - params:
          color: gray
          from: runwaybot
          message: 'aws-1: Concourse deployment to client-aws-1-sandbox-pipeline-test
            failed'
          notify: false
        put: hipchat
    on_success:
      aggregate:
      - params:
          channel: '#botspam'
          icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
          text: 'aws-1: Concourse successfully deployed client-aws-1-sandbox-pipeline-test'
          username: runwaybot
        put: slack
      - params:
          color: gray
          from: runwaybot
          message: 'aws-1: Concourse successfully deployed client-aws-1-sandbox-pipeline-test'
          notify: false
        put: hipchat
  public: true
  serial: true
resource_types:
- name: script
  source:
    repository: cfcommunity/script-resource
  type: docker-image
- name: email
  source:
    repository: pcfseceng/email-resource
  type: docker-image
- name: slack-notification
  source:
    repository: cfcommunity/slack-notification-resource
  type: docker-image
- name: hipchat-notification
  source:
    repository: starkandwayne/hipchat-notification-resource
  type: docker-image
resources:
- name: git
  source:
    branch: master
    private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      lol. you didn't really think that
      we'd put the key here, in a test,
      did you?!
      -----END RSA PRIVATE KEY-----
    uri: git@github.com:someco/something-deployments
  type: git
- name: bosh-lite-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent
  type: bosh-io-stemcell
- name: client-aws-1-preprod-changes
  source:
    branch: master
    paths:
    - client-aws-1-preprod.yml
    private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      lol. you didn't really think that
      we'd put the key here, in a test,
      did you?!
      -----END RSA PRIVATE KEY-----
    uri: git@github.com:someco/something-deployments
  type: git
- name: client-aws-1-preprod-cache
  source:
    branch: master
    paths:
    - .genesis/bin/genesis
    - .genesis/kits
    - .genesis/config
    - .genesis/cached/client-aws-1-sandbox/client.yml
    - .genesis/cached/client-aws-1-sandbox/client-aws.yml
    - .genesis/cached/client-aws-1-sandbox/client-aws-1.yml
    private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      lol. you didn't really think that
      we'd put the key here, in a test,
      did you?!
      -----END RSA PRIVATE KEY-----
    uri: git@github.com:someco/something-deployments
  type: git
- name: client-aws-1-prod-changes
  source:
    branch: master
    paths:
    - client-aws-1-prod.yml
    private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      lol. you didn't really think that
      we'd put the key here, in a test,
      did you?!
      -----END RSA PRIVATE KEY-----
    uri: git@github.com:someco/something-deployments
  type: git
- name: client-aws-1-prod-cache
  source:
    branch: master
    paths:
    - .genesis/bin/genesis
    - .genesis/kits
    - .genesis/config
    - .genesis/cached/client-aws-1-preprod/client.yml
    - .genesis/cached/client-aws-1-preprod/client-aws.yml
    - .genesis/cached/client-aws-1-preprod/client-aws-1.yml
    private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      lol. you didn't really think that
      we'd put the key here, in a test,
      did you?!
      -----END RSA PRIVATE KEY-----
    uri: git@github.com:someco/something-deployments
  type: git
- name: client-aws-1-sandbox-changes
  source:
    branch: master
    paths:
    - .genesis/bin/genesis
    - .genesis/kits
    - .genesis/config
    - client.yml
    - client-aws.yml
    - client-aws-1.yml
    - client-aws-1-sandbox.yml
    private_key: |
      -----BEGIN RSA PRIVATE KEY-----
      lol. you didn't really think that
      we'd put the key here, in a test,
      did you?!
      -----END RSA PRIVATE KEY-----
    uri: git@github.com:someco/something-deployments
  type: git
- name: slack
  source:
    url: http://127.0.0.1:1337
  type: slack-notification
- name: hipchat
  source:
    hipchat_server_url: http://api.hipchat.com
    room_id: 1234
    token: abcdefg
  type: hipchat-notification
