---
meta:
  name: genesis
  target: sw
  url: https://ci.starkandwayne.com
  image: starkandwayne/genesis_ci

  aws:
    access_key: (( vault "secret/pipelines/genesis/aws:access_key" ))
    secret_key: (( vault "secret/pipelines/genesis/aws:secret_key" ))

  github:
    owner: starkandwayne
    repo:  genesis
    private_key:  (( vault "secret/pipelines/genesis/github:private" ))
    access_token: (( vault "secret/pipelines/genesis/github:access_token" ))
  slack:
    webhook: (( vault "secret/pipelines/genesis/slack:webhook" ))
    channel: "#genesis"

  dockerhub:
    email: (( vault "secret/pipelines/genesis/dockerhub:email" ))
    username: (( vault "secret/pipelines/genesis/dockerhub:username" ))
    password: (( vault "secret/pipelines/genesis/dockerhub:password" ))
    repository: starkandwayne/genesis

groups:
- name: generate-ci-image
  jobs:
  - genesis-ci-docker-image
jobs:
- name: test
  plan:
  - name: testing
    do:
    - name: run_tests
      config:
        params:
          GITHUB_USER: starkandwayne-bot
          GITHUB_AUTH_TOKEN: (( grab meta.github.access_token ))
- (( append ))
- name: genesis-ci-docker-image
  plan:
  - get: dockerfile
    trigger: true
  - get: snw-concourse-image
    trigger: true
  - put: genesis-ci
    params:
      build: dockerfile/ci
      tag_as_latest: true


resources:
- name: genesis-ci
  type: docker-image
  source:
    email:    (( grab meta.dockerhub.email ))
    username: (( grab meta.dockerhub.username ))
    password: (( grab meta.dockerhub.password ))
    repository: (( grab meta.image ))
- name: dockerfile
  type: git
  source:
    .: (( inject resources.git.source ))
    paths:
    - ci/Dockerfile
- name: snw-concourse-image
  type: docker-image
  source:
    email:    (( grab meta.dockerhub.email ))
    username: (( grab meta.dockerhub.username ))
    password: (( grab meta.dockerhub.password ))
    repository: starkandwayne/concourse
