---
meta:
  name:    genesis
  release: Genesis
  target:  genesis@pipes
  url:     https://pipes.starkandwayne.com

  # we build our own image in this pipeline, and
  # use it, instead of standard concourse images.
  image:
    name: starkandwayne/genesis_ci

  aws:
    access_key: (( vault "secret/pipelines/aws/cf-community:access" ))
    secret_key: (( vault "secret/pipelines/aws/cf-community:secret" ))

  git:
    name:  Stark & Wayne CI Bot
    email: ci@starkandwayne.com

  github:
    owner: starkandwayne
    repo:  genesis
    private_key:  (( vault "secret/pipelines/github/starkandwayne/ci-bot:private" ))
    access_token: (( vault "secret/pipelines/github/starkandwayne/ci-bot:access_token" ))

  dockerhub:
    email:    (( vault "secret/pipelines/dockerfiles/dockerhub:email" ))
    username: (( vault "secret/pipelines/dockerfiles/dockerhub:username" ))
    password: (( vault "secret/pipelines/dockerfiles/dockerhub:password" ))
    repository: starkandwayne/genesis

  shout:
    url:      http://10.200.131.1:7109
    username: ops
    password: (( vault "secret/buffalo/lab/concourse/shout/ops:password" ))

groups:
- name: generate-ci-image
  jobs:
  - genesis-ci-docker-image
jobs:
- name: genesis-ci-docker-image
  plan:
  - get: dockerfile
    trigger: true
  - get: snw-concourse-image
    trigger: true
  - put: genesis-ci
    params:
      build: dockerfile/ci
      tag_as_latest: true


resources:
- name: genesis-ci
  type: docker-image
  source:
    email:    (( grab meta.dockerhub.email ))
    username: (( grab meta.dockerhub.username ))
    password: (( grab meta.dockerhub.password ))
    repository: (( grab meta.image.name ))
- name: dockerfile
  type: git
  source:
    .: (( inject resources.git.source ))
    paths:
    - ci/Dockerfile
- name: snw-concourse-image
  type: docker-image
  source:
    email:    (( grab meta.dockerhub.email ))
    username: (( grab meta.dockerhub.username ))
    password: (( grab meta.dockerhub.password ))
    repository: starkandwayne/concourse
