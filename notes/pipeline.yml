meta:
  jobs:
    deployment:
      public: true
      serial: true
      plan:
        - aggregate:
          - get: git
            resource: (( param "meta job git resource name should be overridden by caller" ))
          - get: glue
        - task: (( param "meta job task name should be overridden by caller" ))
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
              tag: latest
          inputs:
            - name: git
            - name: glue
          outputs:
            - name: out
          run:
            path: ./glue/run
            args: [./git/bin/genesis deployinator]
          params:
            # VAULT app-id / user-id at some point
            VAULT_APP_ID: concourse
            VAULT_USER_ID: (( concat meta.name "-pipeline" ))
            GENESIS_ENV: (( param "meta job GENESIS_ENV var should be overridden by caller" ))

resources:
  - name: glue
    type: script-resource
    source:
      filename: run
      body: |
        set -e
        $@
        cp -a git out/


  # you need one of these
  - name: git-global-changes
    .: (( inject resources.git ))
    source:
      paths:
        - global/
        - boshlite/site
        - boshlite/sandbox

  # you need one of these per beta environment (per site)
  - name: git-vsphere-site-changes
    .: (( inject resources.git ))
    source:
      paths:
        - vsphere/site
        - vsphere/staging # the beta environment itself

  # you need one of these per site/env
  - name: git-vsphere-drnic-changes
    .: (( inject resources.git ))
    source:
      paths:
        - vsphere/drnic


jobs:
  # ALPHA
  - name: boshlite-sandbox
    .: (( inject meta.jobs.deployment ))
    plan:
      - aggregate:
        - resource: git-global-changes
          trigger: true
      - task: boshlite-sandbox
        params:
          GENESIS_ENV: boshlite/sandbox
        # PUT to the beta inputs
      - put: git-vsphere-site-changes
        params: { repository: out/git }
      - put: git-aws-site-changes
        params: { repository: out/git }

  # BETA for vsphere
  - name: vsphere-staging
    .: (( inject meta.jobs.deployment ))
    plan:
      - aggregate:
        - resource: git-vsphere-site-changes
          trigger: true
          passed: [boshlite-sandbox]
      - task: vsphere-staging
        # PUT to the gamma inputs
      - put: git-vsphere-drnic-changes    # GAMMA
        params: { repository: out/git }
      - put: git-vsphere-lte-changes
        params: { repository: out/git }
      - put: git-vsphere-prod-changes    #  OMEGA
        params: { repository: out/git }

  # BETA for aws
  - name: aws-staging
    .: (( inject meta.jobs.deployment ))
    plan:
      - aggregate:
        - resource: git-aws-site-changes
          trigger: true
          passed: [boshlite-sandbox]
      - task: vsphere-staging
        # PUT to the gamma inputs
      - put: git-aws-prod-changes
        params: { repository: out/git }

  # GAMMAs for vsphere
  - name: vsphere-drnic
    .: (( inject meta.jobs.deployment ))
    plan:
      - aggregate:
        - resource: git-vsphere-drnic-changes
          trigger: true
          password: [vsphere-staging]
      - task: vsphere-drnic
        # PUT to git
      - put: git
        params:{ repository: out/git }

  # lte is similar

  # OMEGA
  - name: vsphere-prod
    .: (( inject meta.jobs.deployment ))
    plan:
      - aggregate:
        - resource: git-vsphere-prod-changes
          trigger: false
          password: [vsphere-staging]
      - task: vsphere-prod
        # PUT to git
      - put: git
        params:{ repository: out/git }

